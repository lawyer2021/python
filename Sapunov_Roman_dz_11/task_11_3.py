# 3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
# Проверить работу исключения на реальном примере. Запрашивать у пользователя данные и заполнять список необходимо только числами.
# Класс-исключение должен контролировать типы данных элементов списка.
# Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно,
# пока пользователь сам не остановит работу скрипта, введя, например, команду «stop».
# При этом скрипт завершается, сформированный список с числами выводится на экран.
# Подсказка: для этого задания примем, что пользователь может вводить только числа и строки.
# Во время ввода пользователем очередного элемента необходимо реализовать проверку типа элемента.
# Вносить его в список, только если введено число.
# Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение.
# При этом работа скрипта не должна завершаться.

class My_Error(ValueError):
    def __init__(self):
        self.my_list = []
        self.my_list.append(self.args)

    def add_item(self, n):
        self.my_list.append(n)

    def dis(self):
        return self.my_list


number = My_Error()
a = 0
while a < 1000:
    try:
        n = int(input("Введите число: "))
        number.add_item(n)
        if n == "stop":
            raise My_Error()
    except:
        print("Всё")
        print(f" Список: {number.dis()}")
    a += 1
